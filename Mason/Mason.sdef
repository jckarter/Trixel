<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">
<dictionary title="Mason">

    <suite name="Standard Suite" code="????" description="Common classes and commands for all applications.">

        <command name="open" code="aevtodoc" description="Open a document.">
            <direct-parameter description="The file(s) to be opened.">
                <type type="file" list="yes"/>
            </direct-parameter>
        </command>

        <enumeration name="save options" code="savo">
            <enumerator name="yes" code="yes " description="Save the file."/>
            <enumerator name="no" code="no  " description="Do not save the file."/>
            <enumerator name="ask" code="ask " description="Ask the user whether or not to save the file."/>
        </enumeration>

        <command name="close" code="coreclos" description="Close a document.">
            <cocoa class="NSCloseCommand"/>
            <direct-parameter type="specifier" description="the document(s) or window(s) to close."/>
            <parameter name="saving" code="savo" type="save options" optional="yes" description="Should changes be saved before closing?">
                <cocoa key="SaveOptions"/>
            </parameter>
            <parameter name="saving in" code="kfil" type="file" optional="yes" description="The file in which to save the document, if so.">
                <cocoa key="File"/>
            </parameter>
        </command>

        <command name="save" code="coresave" description="Save a document.">
            <direct-parameter type="specifier" description="The document(s) or window(s) to save."/>
            <parameter name="in" code="kfil" type="file" optional="yes" description="The file in which to save the document.">
                <cocoa key="File"/>
            </parameter>
        </command>

        <command name="quit" code="aevtquit" description="Quit the application.">
            <cocoa class="NSQuitCommand"/>
            <parameter name="saving" code="savo" type="save options" optional="yes" description="Should changes be saved before quitting?">
                <cocoa key="SaveOptions"/>
            </parameter>
        </command>

        <command name="count" code="corecnte" description="Return the number of elements of a particular class within an object.">
            <cocoa class="NSCountCommand"/>
            <direct-parameter type="specifier" description="The objects to be counted."/>
            <parameter name="each" code="kocl" type="type" optional="yes" description="The class of objects to be counted." hidden="yes">
                <cocoa key="ObjectClass"/>
            </parameter>
            <result type="integer" description="The count."/>
        </command>

        <command name="delete" code="coredelo" description="Delete an object.">
            <cocoa class="NSDeleteCommand"/>
            <direct-parameter type="specifier" description="The object(s) to delete."/>
        </command>

        <command name="duplicate" code="coreclon" description="Copy an object.">
            <cocoa class="NSCloneCommand"/>
            <direct-parameter type="specifier" description="The object(s) to copy."/>
            <parameter name="to" code="insh" type="location specifier" description="The location for the new copy or copies." optional="yes">
                <cocoa key="ToLocation"/>
            </parameter>
            <parameter name="with properties" code="prdt" type="record" description="Properties to set in the new copy or copies right away." optional="yes">
                <cocoa key="WithProperties"/>
            </parameter>
        </command>

        <command name="exists" code="coredoex" description="Verify that an object exists.">
            <cocoa class="NSExistsCommand"/>
            <direct-parameter type="any" description="The object(s) to check."/>
            <result type="boolean" description="Did the object(s) exist?"/>
        </command>

        <command name="make" code="corecrel" description="Create a new object.">
            <cocoa class="NSCreateCommand"/>
            <parameter name="new" code="kocl" type="type" description="The class of the new object.">
                <cocoa key="ObjectClass"/>
            </parameter>
            <parameter name="at" code="insh" type="location specifier" optional="yes" description="The location at which to insert the object.">
                <cocoa key="Location"/>
            </parameter>
            <parameter name="with data" code="data" type="any" optional="yes" description="The initial contents of the object.">
                <cocoa key="ObjectData"/>
            </parameter>
            <parameter name="with properties" code="prdt" type="record" optional="yes" description="The initial values for properties of the object.">
                <cocoa key="KeyDictionary"/>
            </parameter>
            <result type="specifier" description="The new object."/>
        </command>

        <command name="move" code="coremove" description="Move an object to a new location.">
            <cocoa class="NSMoveCommand"/>
            <direct-parameter type="specifier" description="The object(s) to move."/>
            <parameter name="to" code="insh" type="location specifier" description="The new location for the object(s).">
                <cocoa key="ToLocation"/>
            </parameter>
        </command>

        <class name="window" code="cwin" description="A window.">
            <cocoa class="NSWindow"/>
            <property name="name" code="pnam" type="text" access="r" description="The title of the window.">
                <cocoa key="title"/>
            </property>
            <property name="id" code="ID  " type="integer" access="r" description="The unique identifier of the window.">
                <cocoa key="uniqueID"/>
            </property>
            <property name="index" code="pidx" type="integer" description="The index of the window, ordered front to back.">
                <cocoa key="orderedIndex"/>
            </property>
            <property name="bounds" code="pbnd" type="rectangle" description="The bounding rectangle of the window.">
                <cocoa key="boundsAsQDRect"/>
            </property>
            <property name="closeable" code="hclb" type="boolean" access="r" description="Does the window have a close button?">
                <cocoa key="hasCloseBox"/>
            </property>
            <property name="miniaturizable" code="ismn" type="boolean" access="r" description="Does the window have a minimize button?">
                <cocoa key="isMiniaturizable"/>
            </property>
            <property name="miniaturized" code="pmnd" type="boolean" description="Is the window minimized right now?">
                <cocoa key="isMiniaturized"/>
            </property>
            <property name="resizable" code="prsz" type="boolean" access="r" description="Can the window be resized?">
                <cocoa key="isResizable"/>
            </property>
            <property name="visible" code="pvis" type="boolean" description="Is the window visible right now?">
                <cocoa key="isVisible"/>
            </property>
            <property name="zoomable" code="iszm" type="boolean" access="r" description="Does the window have a zoom button?">
                <cocoa key="isZoomable"/>
            </property>
            <property name="zoomed" code="pzum" type="boolean" description="Is the window zoomed right now?">
                <cocoa key="isZoomed"/>
            </property>

            <property name="document" code="docu" type="document" access="r" description="The document whose contents are displayed in the window."/>

            <responds-to name="close">
                <cocoa method="handleCloseScriptCommand:"/>
            </responds-to>
            <responds-to name="save">
                <cocoa method="handleSaveScriptCommand:"/>
            </responds-to>
        </class>

    </suite>

    <suite name="Voxmap Suite" code="[___" description="Voxmap manipulation functions">

        <class name="palette color" code="[RGB">
            <cocoa class="MasonScriptingPaletteColor"/>
            
            <property name="red" code="[RRR" type="real" access="r" description="Red component">
                <cocoa key="redComponent"/>
            </property>
            <property name="green" code="[GGG" type="real" access="r" description="Green component">
                <cocoa key="greenComponent"/>
            </property>
            <property name="blue" code="[BBB" type="real" access="r" description="Blue component">
                <cocoa key="blueComponent"/>
            </property>
            <property name="alpha" code="[AAA" type="real" access="r" description="Alpha component">
                <cocoa key="alphaComponent"/>
            </property>
        </class>

        <record-type name="point" code="[XYZ">
            <property name="x" code="[XXX" type="real" description="X coordinate">
                <cocoa key="xCoordinate"/>
            </property>
            <property name="y" code="[YYY" type="real" description="Y coordinate">
                <cocoa key="yCoordinate"/>
            </property>
            <property name="z" code="[ZZZ" type="real" description="Z coordinate">
                <cocoa key="zCoordinate"/>
            </property>
        </record-type>

        <command name="voxel" code="[___[--&gt;" description="Get the palette index value at the given point within the voxmap">
            <cocoa class="MasonGetVoxelCommand"/>
            <parameter name="at" code="[xyz" type="point" optional="no" description="Point at which to sample the voxmap">
                <cocoa key="Point"/>
            </parameter>
            <parameter name="of" code="[doc" type="brick" optional="no" description="Voxmap to sample">
                <cocoa key="Brick"/>
            </parameter>
            <result type="integer" description="The palette index at the given point"/>
        </command>
        <command name="set voxel" code="[___[&lt;--" description="Set the palette index value at the given point within the voxmap">
            <cocoa class="MasonSetVoxelCommand"/>
            <parameter name="at" code="[xyz" type="point" optional="no" description="Point at which to sample the voxmap">
                <cocoa key="Point"/>
            </parameter>
            <parameter name="of" code="[doc" type="brick" optional="no" description="Voxmap to alter">
                <cocoa key="Brick"/>
            </parameter>
            <parameter name="to" code="[rgb" type="integer" optional="no" description="The palette index to set at the given point">
                <cocoa key="Color"/>
            </parameter>
        </command>
        
        <class name="application" code="capp" description="The application's top-level scripting object.">
            <cocoa class="MasonApplication"/>
            
            <property name="name" code="pnam" type="text" access="r" description="The name of the application."/>
            <property name="frontmost" code="pisf" type="boolean" access="r" description="Is this the active application?">
                <cocoa key="isActive"/>
            </property>
            <property name="version" code="vers" type="text" access="r" description="The version number of the application."/>
            <element type="document">
                <cocoa key="orderedDocuments"/>
            </element>
            <element type="window" access="r">
                <cocoa key="orderedWindows"/>
            </element>
            
            <responds-to name="open">
                <cocoa method="handleOpenScriptCommand:"/>
            </responds-to>
            <responds-to name="quit">
                <cocoa method="handleQuitScriptCommand:"/>
            </responds-to>
        </class>

        <class name="brick" code="[brk" description="The voxmap.">
            <cocoa class="MasonBrick"/>

            <property name="width" code="[WWW" type="integer" access="r" description="Width of the voxmap">
                <cocoa key="width"/>
            </property>
            <property name="height" code="[HHH" type="integer" access="r" description="Height of the voxmap">
                <cocoa key="height"/>
            </property>
            <property name="depth" code="[DDD" type="integer" access="r" description="Depth of the voxmap">
                <cocoa key="depth"/>
            </property>
            
            <element type="palette color" access="rw" description="The set of palette colors in the voxmap">
                <cocoa key="scriptingPaletteColors"/>
            </element>
        </class>

        <class name="document" code="docu" description="A Mason document.">
            <cocoa class="MasonDocument"/>

            <contents access="r" type="brick" description="The voxmap contents of the document.">
                <cocoa key="brick"/>
            </contents>
            
            <property name="name" code="pnam" type="text" access="r" description="Its name.">
                <cocoa key="displayName"/>
            </property>
            <property name="modified" code="imod" type="boolean" access="r" description="Has it been modified since the last save?">
                <cocoa key="isDocumentEdited"/>
            </property>
            <property name="file" code="file" type="file" access="r" description="Its location on disk, if it has one.">
                <cocoa key="fileURL"/>
            </property>
            
            <responds-to name="close">
                <cocoa method="handleCloseScriptCommand:"/>
            </responds-to>
            <responds-to name="save">
                <cocoa method="handleSaveScriptCommand:"/>
            </responds-to>
        </class>

    </suite>

</dictionary>